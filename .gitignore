# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
venv/
env/
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
*.egg-info/
.installed.cfg
*.egg

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*,cover
.hypothesis/
.pytest_cache

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py

# Flask instance folder
instance/

# Sphinx documentation
docs/_build/

# MkDocs documentation
/site/

# PyBuilder
target/

# IPython Notebook
.ipynb_checkpoints

# pyenv
.python-version

.vscode/

appveyoy.yml
# What Python version is installed where:
# http://www.appveyor.com/docs/installed-software#python

environment:
  matrix:
    - PYTHON: "C:\\Python27"
      TOX_ENV: "py27"

    - PYTHON: "C:\\Python34"
      TOX_ENV: "py34"

    - PYTHON: "C:\\Python35"
      TOX_ENV: "py35"

    - PYTHON: "C:\\Python36"
      TOX_ENV: "py36"

    - PYTHON: "C:\\Python37"
      TOX_ENV: "py37"

init:
  - "%PYTHON%/python -V"
  - "%PYTHON%/python -c \"import struct;print( 8 * struct.calcsize(\'P\'))\""

install:
  - "%PYTHON%/Scripts/easy_install -U pip"
  - "%PYTHON%/Scripts/pip install tox"
  - "%PYTHON%/Scripts/pip install wheel"

build: false  # Not a C# project, build stuff at the test step instead.

test_script:
  - "%PYTHON%/Scripts/tox -e %TOX_ENV%"

after_test:
  - "%PYTHON%/python setup.py bdist_wheel"
  - ps: "ls dist"

artifacts:
  - path: dist\*

#on_success:
#  - TODO: upload the content of dist/*.whl to a public wheelhouse